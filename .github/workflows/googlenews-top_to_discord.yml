name: Google News (Top) RSS to Discord

on:
  schedule:
    - cron: '*/30 * * * *'  # 30분마다 실행
  workflow_dispatch:

env:
  INITIALIZE_MODE_TOP: ${{ secrets.INITIALIZE_MODE_GOOGLENEWS_TOP }}
  DISCORD_WEBHOOK_TOP: ${{ secrets.DISCORD_WEBHOOK_GOOGLENEWS_TOP }}
  DISCORD_AVATAR_TOP: ${{ secrets.DISCORD_AVATAR_GOOGLENEWS_TOP }}
  DISCORD_USERNAME_TOP: ${{ secrets.DISCORD_USERNAME_GOOGLENEWS_TOP }}
  ADVANCED_FILTER_TOP: ${{ secrets.ADVANCED_FILTER_GOOGLENEWS_TOP }}
  DATE_FILTER_TOP: ${{ secrets.DATE_FILTER_GOOGLENEWS_TOP }}
  ORIGIN_LINK_TOP: ${{ secrets.ORIGIN_LINK_GOOGLENEWS_TOP }}

jobs:
  fetch-and-post:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          pip install requests python-dateutil beautifulsoup4

      - name: Get latest successful run ID
        id: get_latest_run
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const workflow = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'googlenews_top_to_discord.yml',
              status: 'success'
            });
            return workflow.data.workflow_runs[0]?.id.toString() || '';

      - name: Download previous database
        if: env.INITIALIZE_MODE_TOP != 'true' && steps.get_latest_run.outputs.result != ''
        uses: actions/download-artifact@v4
        with:
          name: googlenews_database
          run-id: ${{ steps.get_latest_run.outputs.result }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Check if database exists or initialize
        id: check_db
        run: |
          if [ "${{ secrets.INITIALIZE_MODE_GOOGLENEWS_TOP }}" == "true" ] || [ ! -f google_news_top.db ]; then
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Initializing or creating new database"
            rm -f google_news_top.db
            touch google_news_top.db
          else:
            echo "exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Read Google News RSS and Post to Discord
        env:
          DISCORD_WEBHOOK_TOP: ${{ secrets.DISCORD_WEBHOOK_GOOGLENEWS_TOP }}
          DISCORD_AVATAR_TOP: ${{ secrets.DISCORD_AVATAR_GOOGLENEWS_TOP }}
          DISCORD_USERNAME_TOP: ${{ secrets.DISCORD_USERNAME_GOOGLENEWS_TOP }}
          INITIALIZE_MODE_TOP: ${{ secrets.INITIALIZE_MODE_GOOGLENEWS_TOP }}
          ADVANCED_FILTER_TOP: ${{ secrets.ADVANCED_FILTER_GOOGLENEWS_TOP }}
          DATE_FILTER_TOP: ${{ secrets.DATE_FILTER_GOOGLENEWS_TOP }}
          ORIGIN_LINK_TOP: ${{ secrets.ORIGIN_LINK_GOOGLENEWS_TOP }}
        run: |
          python .github/scripts/googlenews_top_to_discord.py

      - name: Upload updated database
        uses: actions/upload-artifact@v4
        with:
          name: googlenews_database
          path: google_news_top.db
          retention-days: 90

      - name: Debug Information
        if: always()
        run: |
          echo "Latest successful run ID: ${{ steps.get_latest_run.outputs.result }}"
          echo "INITIALIZE_MODE_TOP: ${{ secrets.INITIALIZE_MODE_GOOGLENEWS_TOP }}"
          echo "Workspace contents:"
          ls -la
          echo "Database file size:"
          ls -lh google_news_top.db || echo "Database file not found"
          echo "Database contents (if exists):"
          sqlite3 google_news_top.db "SELECT COUNT(*) FROM news_items;" || echo "Unable to query database"
