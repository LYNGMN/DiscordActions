name: Google News (Topics) RSS to Discord

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  fetch-and-post:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install Dependencies
      run: |
        pip install requests python-dateutil beautifulsoup4

    - name: Get latest successful run ID
      id: get_latest_run
      uses: actions/github-script@v7
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        result-encoding: string
        script: |
          const workflow = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'googlenews-topics_to_discord.yml',
            status: 'success'
          });
          return workflow.data.workflow_runs[0]?.id.toString() || '';

    - name: Download previous database
      if: steps.get_latest_run.outputs.result != ''
      uses: actions/download-artifact@v4
      with:
        name: googlenews_database
        run-id: ${{ steps.get_latest_run.outputs.result }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

    - name: Check if database exists
      id: check_db
      run: |
        if [ -f google_news_topic.db ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Read Google News RSS and Post to Discord
      env:
        DISCORD_WEBHOOK_TOPICS: ${{ secrets.DISCORD_WEBHOOK_TOPICS }}
        IS_FIRST_RUN: ${{ steps.check_db.outputs.exists == 'false' }}
      run: |
        python .github/scripts/googlenews-topics_to_discord.py

    - name: Upload updated database
      uses: actions/upload-artifact@v4
      with:
        name: googlenews_database
        path: google_news_topic.db
        retention-days: 90

    - name: Debug Information
      if: always()
      run: |
        echo "Latest successful run ID: ${{ steps.get_latest_run.outputs.result }}"
        echo "IS_FIRST_RUN: ${{ steps.check_db.outputs.exists == 'false' }}"
        echo "Workspace contents:"
        ls -la
        echo "Database file size:"
        ls -lh google_news_topic.db || echo "Database file not found"
        echo "Database contents (if exists):"
        sqlite3 google_news_topic.db "SELECT COUNT(*) FROM news_items;" || echo "Unable to query database"
